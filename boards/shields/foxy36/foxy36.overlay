#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred";
    tapping-terms-ms = <300>;
};

/ {
    behaviors {
        skq: skq {
            compatible = "zmk,behavior-sticky-key";
            label = "SKQ";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
        };

        dt_copy: dt_copy {
            compatible = "zmk,behavior-tap-dance";
            label = "DT_COPY";
            #binding-cells = <0>;
            bindings = <&kp W>, <&copy_mac>;
        };

        dt_paste: dt_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "DT_PASTE";
            #binding-cells = <0>;
            bindings = <&kp P>, <&paste_mac>;
        };

        dt_cut: dt_cut {
            compatible = "zmk,behavior-tap-dance";
            label = "DT_CUT";
            #binding-cells = <0>;
            bindings = <&kp X>, <&cut_mac>;
        };

        ht_copy_mac: ht_copy_mac {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_COPY_MAC";
            bindings = <&copy_mac>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <500>;
            flavor = "tap-preferred";
        };

        ht_cut_mac: ht_cut_mac {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_CUT_MAC";
            bindings = <&cut_mac>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <500>;
            flavor = "tap-preferred";
        };

        ht_paste_mac: ht_paste_mac {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_PASTE_MAC";
            bindings = <&paste_mac>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <500>;
            flavor = "tap-preferred";
        };

        hold_tap_layer: hold_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER";
            bindings = <&kp>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        ht_tmx_scrl: ht_tmx_scrl {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_TMX_SCRL";
            bindings = <&mc_tmx_scrl>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <200>;
        };
      combos {
        compatible = "zmk,combos";

        Shift {
            bindings = <&skq LEFT_SHIFT>;
            key-positions = <16 15>;
            timeout-ms = <75>;
            require-prior-idle-ms = <200>;
        };

        Ctrl {
            bindings = <&sk LEFT_CONTROL>;
            key-positions = <14 15>;
            require-prior-idle-ms = <200>;
        };

        Alt {
            bindings = <&sk LEFT_ALT>;
            key-positions = <14 13>;
            require-prior-idle-ms = <200>;
        };

        Mod {
            bindings = <&sk LEFT_GUI>;
            key-positions = <27 28>;
            require-prior-idle-ms = <200>;
        };

        r_Alt {
            bindings = <&sk LEFT_ALT>;
            key-positions = <19 20>;
            require-prior-idle-ms = <350>;
        };

        toggle_qwerty {
            bindings = <&to 1>;
            key-positions = <37 40>;
            timeout-ms = <75>;
            require-prior-idle-ms = <200>;
            layers = <0>;
        };

        toggle_colemakdh {
            bindings = <&to 0>;
            key-positions = <37 40>;
            timeout-ms = <75>;
            require-prior-idle-ms = <200>;
            layers = <1>;
        };

        r_Ctrl {
            bindings = <&sk RIGHT_CONTROL>;
            key-positions = <20 21>;
            require-prior-idle-ms = <350>;
        };

        r_Shift {
            bindings = <&sk RIGHT_SHIFT>;
            key-positions = <21 22>;
            require-prior-idle-ms = <350>;
        };

        r_Mod {
            bindings = <&sk RIGHT_GUI>;
            key-positions = <31 32>;
            require-prior-idle-ms = <350>;
        };
    };

    macros {
        bt_0: bt_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &to 0>;
            label = "BT_0";
        };

        bt_1: bt_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &to 0>;
            label = "BT_1";
        };

        bt_2: bt_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2 &to 0>;
            label = "BT_2";
        };

        bt_3: bt_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3 &to 0>;
            label = "BT_3";
        };

        bt_4: bt_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4 &to 0>;
            label = "BT_4";
        };

        copy_mac: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_COMMAND &kp C>;
            label = "COPY";
        };

        paste_mac: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_COMMAND &kp V>;
            label = "PASTE";
        };

        cut_mac: cut_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_COMMAND &kp X>;
            label = "CUT_MAC";
        };

        mc_tmx_scrl: mc_tmx_scrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LC(S) &kp LEFT_BRACKET>;
            label = "MC_TMX_SCRL";
        };
    };
    };

    kscan0: kscan0 {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;

        col-gpios
            = <&pro_micro 6 GPIO_ACTIVE_HIGH>
            , <&pro_micro 5 GPIO_ACTIVE_HIGH>
            , <&pro_micro 4 GPIO_ACTIVE_HIGH>
            , <&pro_micro 3 GPIO_ACTIVE_HIGH>
            , <&pro_micro 2 GPIO_ACTIVE_HIGH>
            , <&pro_micro 21 GPIO_ACTIVE_HIGH>
            , <&pro_micro 20 GPIO_ACTIVE_HIGH>
            , <&pro_micro 19 GPIO_ACTIVE_HIGH>
            , <&pro_micro 16 GPIO_ACTIVE_HIGH>
            , <&pro_micro 10 GPIO_ACTIVE_HIGH>
            ;

        row-gpios
            = <&pro_micro 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        rows = <4>;
        columns = <10>;
        // ┌───┬───┬───┬───┬───┐  ┌───┬───┬───┬───┬───┐
        // │ Q │ W │ F │ P │ B │  │ J │ L │ U │ Y │ ; │
        // ├───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┤
        // │ A │ R │ S │ T │ G │  │ H │ N │ E │ I │ O │
        // ├───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┤
        // │ Z │ X │ C │ D │ V │  │ K │ H │ , │ . │ / │
        // └───┴───┼───┼───┼───┤  ├───┼───┼───┼───┴───┘
        //         │ - │ - │ - │  │ - │ - │ - │
        //         └───┴───┴───┘  └───┴───┴───┘
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)   RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)   RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)   RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
                            RC(3,2) RC(3,3) RC(3,4)   RC(3,5) RC(3,6) RC(3,7)
        >;
    };

    physical_layout0: physical_layout_0 {
        compatible = "zmk,physical-layout";
        display-name = "Default Layout";
        kscan = <&kscan0>; // Label of the kscan node, optional if all layouts use the same
        transform = <&default_transform>; // Label of the matrix transform for this layout
    };

    chosen {
        zmk,physical-layout = &physical_layout0;
    };
};
